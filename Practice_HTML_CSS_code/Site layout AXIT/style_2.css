/*-------------------------------------------------*/
/* Общие стили, сброс стилей браузера по умолчанию */
/*-------------------------------------------------*/
*, *:after, *:before { /* after: Псевдоэлемент, который используется для вывода желаемого текста после содержимого элемента, к которому он добавляется. */
                       /* before: Псевдоэлемент :before применяется для отображения желаемого контента до содержимого элемента, к которому он добавляется. */
    box-sizing: border-box;      /* Применяется для изменения алгоритма расчета ширины и высоты элемента. */
    padding:    0;               /* Устанавливает значение полей вокруг содержимого элемента. */
    margin:     0;               /* Устанавливает величину отступа от каждого края элемента. */
}
p {
    color: #86878b;
}
ul {
    list-style: none; /* Универсальное свойство, позволяющее одновременно задать стиль маркера, его положение, а также изображение, которое будет использоваться в качестве маркера. */
}
a {
    text-decoration: none; /* Добавляет оформление текста в виде его подчеркивания, перечеркивания, линии над текстом и мигания. */
    outline:         none; /* Универсальное свойство, одновременно устанавливающее цвет, стиль и толщину внешней границы на всех четырех сторонах элемента. */
}
img {
    display: block; /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    width:   100%;  /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). */
}
h1, h2, h3, h4, h5, h6 {
    font-family:    'Playfair Display'; /* Устанавливает семейство шрифта, которое будет использоваться для оформления текста содержимого. */
    font-weight:    bold;               /* Устанавливает насыщенность шрифта. */
    letter-spacing: 1px;                /* Определяет интервал между символами в пределах элемента. */
    color:          black;            /* Определяет цвет текста элемента. */
}
body {
    font-family: 'Open Sans', arial, sans-serif; /* Устанавливает семейство шрифта, которое будет использоваться для оформления текста содержимого. */
    font-size:   14px;                           /* Определяет размер шрифта элемента. Размер может быть установлен несколькими способами. */
    line-height: 1;                              /* Устанавливает интерлиньяж (межстрочный интервал) текста, отсчет ведется от базовой линии шрифта. */
    color:       #373737;                      /* Определяет цвет текста элемента. */
    background:  #f7f7f7;                      /* Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. */
    
}
/* добавим очистку потока для всех контейнеров, внутри которых задано обтекание дочерних элементов */
header:after, .container:after, footer:after { /* after: Псевдоэлемент, который используется для вывода желаемого текста после содержимого элемента, к которому он добавляется. */
    content: "";    /* Свойство content позволяет вставлять генерируемое содержание в текст веб-страницы, которое первоначально в тексте отсутствует. */
    display: table; /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    clear:   both;  /* Устанавливает, с какой стороны элемента запрещено его обтекание другими элементами. */
} 
hr {
    width:  64px;                /* Устанавливает ширину блочных или заменяемых элементов. */
    border: 1px solid #ff8b38; /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
}

/* стилевой класс, который управляет шириной контейнера сетки*/
.container {
    margin:    0 auto; /* Устанавливает величину отступа от каждого края элемента. */
    width:     100%;   /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). */
    max-width: 960px;  /* Устанавливает максимальную ширину элемента. */
    padding:   0 15px; /* Устанавливает значение полей вокруг содержимого элемента. */
}
/*-----------------------*/
/* Стили общих элементов */
/*-----------------------*/
.logo span:nth-child(odd) { /* Псевдокласс :nth-child используется для добавления стиля к элементам на основе нумерации в дереве элементов. */
    /* Все нечетные номера элементов. */
    color:       white; /* Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. */
    font-weight: bold;    /* Устанавливает насыщенность шрифта. */
}
.logo span:nth-child(even) { /* Псевдокласс :nth-child используется для добавления стиля к элементам на основе нумерации в дереве элементов. */
    /* Все четные номера элементов. */
    color: #ff8b38; /* Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. */
}
.knopka {
    width:           135px;   /* Устанавливает ширину блочных или заменяемых элементов */
    height:          40px;    /* Устанавливает высоту блочных или заменяемых элементов */
    display:         flex;    /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    justify-content: center;  /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
    align-items:     center;  /* Свойство align-items выравнивает флекс-элементы внутри контейнера в перпендикулярном направлении. */
    color:           white; /* Определяет цвет текста элемента. */
}
.formbutton { /* Определяет стиль элемента при наведении на него курсора мыши, но при этом элемент еще не активирован, иными словами кнопка мыши не нажата. */
    cursor: pointer; /* Устанавливает форму курсора, когда он находится в пределах элемента. */
}
.sub_list {
    width:            90%;       /* Устанавливает ширину блочных или заменяемых элементов */
    min-width:        170px;     /* Устанавливает максимальную ширину элемента. */
    height:           120px;     /* Устанавливает высоту блочных или заменяемых элементов */
    background-color: #9a9a9a; /* Определяет цвет фона элемента. */
    display:          flex;      /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    justify-content:  center;    /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
    align-items:      center;    /* Свойство align-items выравнивает флекс-элементы внутри контейнера в перпендикулярном направлении. */
}
.leftPanel, .rightPanel {
    display:         flex;   /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    justify-content: center; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
}
.stroke {
    display:          flex;      /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    justify-content:  center;    /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
    align-items:      center;    /* Свойство align-items выравнивает флекс-элементы внутри контейнера в перпендикулярном направлении. */
    border: 2px solid #ff9b51;
    border-radius: 30px;
}
/*----------------------------*/
/* Стили навигационной панели */
/*----------------------------*/
#NavbarPanel {
    background-color: black; /* Определяет цвет фона элемента. */
    height:           50px;    /* Устанавливает высоту блочных или заменяемых элементов (к ним, например, относится тег <img>). */
}
    #NavbarPanel .container {
        height:         100%;   /* Устанавливает высоту блочных или заменяемых элементов (к ним, например, относится тег <img>). */
        display:        flex;   /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
        flex-direction: row;    /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
        align-items:    center; /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
    }
        #NavbarPanel .container .logo {
            font-size: 27px; /* Определяет размер шрифта элемента. */
        }
        #menu {
            margin-left: auto; /* Устанавливает величину отступа от левого края элемента. */
        }
            #menu li {
                display:     inline; /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
                margin-right: 15px; /* Устанавливает величину отступа от правого края элемента. */
            }
            #menu li:last-child  { /* Псевдокласс :last-child задает стилевое оформление последнего элемента своего родителя. */
                margin-right: 0; /* Устанавливает величину отступа от правого края элемента. */
            }
                #menu li a {
                    color: #b0b0b0; /* Определяет цвет текста элемента. */
                }
/* кнопка переключения меню, появляющаяся при ширине 480px */
.nav-toggle {
    margin-left: auto;      /* Устанавливает величину отступа от левого края элемента. */
    display:     none;      /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    position:    relative;  /* Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице. */
    width:       40px;      /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). */
    height:      40px;      /* Устанавливает высоту блочных или заменяемых элементов (к ним, например, относится тег <img>). */
    background:  #ff9b51; /* Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. */
    cursor:      pointer;   /* Устанавливает форму курсора, когда он находится в пределах элемента. */
}
    .nav-toggle span {
        display:    block;    /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
        position:   absolute; /* Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице. */
        top:        19px;     /* Для позиционированного элемента определяет расстояние от верхнего края родительского элемента до верхнего края дочернего элемента. */
        left:       8px;      /* Для позиционированного элемента определяет расстояние от левого края родительского элемента, не включая отступ, поле и ширину рамки, до левого края дочернего элемента. */
        right:      8px;      /* Для позиционированного элемента определяет расстояние от правого края родительского элемента, не включая отступ, поле и ширину рамки, до правого края дочернего элемента. */
        height:     2px;      /* Устанавливает высоту блочных или заменяемых элементов (к ним, например, относится тег <img>). */
        background: white;  /* Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. */
    }
    .nav-toggle span:before, .nav-toggle span:after { /* after: Псевдоэлемент, который используется для вывода желаемого текста после содержимого элемента, к которому он добавляется. */
                                                      /* before: Псевдоэлемент :before применяется для отображения желаемого контента до содержимого элемента, к которому он добавляется. */
        content:    "";       /* Свойство content позволяет вставлять генерируемое содержание в текст веб-страницы, которое первоначально в тексте отсутствует.  */
        position:   absolute; /* Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице. */
        display:    block;    /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
        left:       0;        /* Для позиционированного элемента определяет расстояние от левого края родительского элемента, не включая отступ, поле и ширину рамки, до левого края дочернего элемента. */
        width:      100%;     /* Устанавливает ширину блочных или заменяемых элементов (к ним, например, относится тег <img>). */
        height:     2px;      /* Устанавливает высоту блочных или заменяемых элементов (к ним, например, относится тег <img>). */
        background: white;  /* Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. */
    }
    .nav-toggle span:before { /* before: Псевдоэлемент :before применяется для отображения желаемого контента до содержимого элемента, к которому он добавляется. */
        top: -10px; /* Для позиционированного элемента определяет расстояние от верхнего края родительского элемента до верхнего края дочернего элемента. */
    }
    .nav-toggle span:after { /* after: Псевдоэлемент, который используется для вывода желаемого текста после содержимого элемента, к которому он добавляется. */
        bottom: -10px; /* Устанавливает положение нижнего края содержимого элемента без учета толщины рамок и отступов. */
    }
/* класс, который будет добавлен в верхнему меню при нажатии на кнопку и покажет скрытое меню*/
#menu.active {
    max-height: 125px; /* Устанавливает максимальную высоту элемента. */
}

/*----------------------------------*/
/* Стили для шапки и её содержимого */
/*----------------------------------*/
header {
    background-color: black; /* Определяет цвет фона элемента. */
    height:           500px;   /* Устанавливает высоту блочных или заменяемых элементов. */
    padding-top:      25px;    /* Устанавливает значение поля от верхнего края содержимого элемента. */
    padding-bottom:   10%;     /* Устанавливает значение поля от нижнего края содержимого элемента. */
}
    header h3 {
        margin-bottom: 20px;      /* Устанавливает величину отступа от нижнего края элемента. */
        color:         #353535; /* Определяет цвет текста элемента. */
        font-size:     24px;      /* Определяет размер шрифта элемента. */
        text-align:    center;    /* Определяет горизонтальное выравнивание текста в пределах элемента. */
    }
    #HeaderPanel {
        display:        flex;        /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
        flex-direction: row-reverse; /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
        height:         420px;       /* Устанавливает высоту блочных или заменяемых элементов. */
    }
        #HeaderPanel .leftPanel {
            padding-right:   20px;         /* Устанавливает значение поля от правого края содержимого элемента. */
            width:           50%;          /* Устанавливает ширину блочных или заменяемых элементов. */
            height:          100%;         /* Устанавливает высоту блочных или заменяемых элементов. */
            flex-direction:  column;       /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
            justify-content: space-around; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
        }
            #HeaderPanel .leftPanel .logo {
                font-size: 60px; /* Определяет размер шрифта элемента. */
            }
            #HeaderPanel .leftPanel .stext {
                font-size: 32px;    /* Определяет размер шрифта элемента. */
                color:     white; /* Определяет цвет текста элемента. */
            }
            #HeaderPanel .leftPanel hr {
                border: 2px solid white; /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
            }
            #HeaderPanel .leftPanel p {
                font-size: 14px; /* Определяет размер шрифта элемента. */
            }
            #HeaderPanel .leftPanel .knopka {
                border: 1px solid white; /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
            }
            #HeaderPanel .leftPanel .knopka:hover { /* Определяет стиль элемента при наведении на него курсора мыши, но при этом элемент еще не активирован, иными словами кнопка мыши не нажата. */
                background-color: #ff9b51; /* Определяет цвет фона элемента. */
            }
        #HeaderPanel .rightPanel {
            width:           50%;    /* Устанавливает ширину блочных или заменяемых элементов. */
            align-items:     center; /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
            justify-content: right;  /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
        }
            #Signup {
                border-radius:    5px;     /* Устанавливает радиус скругления уголков рамки. */
                background-color: white; /* Определяет цвет фона элемента. */
                width:            300px;   /* Устанавливает ширину блочных или заменяемых элементов. */
                height:           300px;   /* Устанавливает высоту блочных или заменяемых элементов. */
            }
                .formHeader {
                    border-radius:    5px 5px 0 0; /* Устанавливает радиус скругления уголков рамки. */
                    color:            black;     /* Определяет цвет текста элемента. */
                    background-color: #f5f5f5;   /* Определяет цвет фона элемента. */
                    display:          flex;        /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
                    justify-content:  center;      /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
                    align-items:      center;      /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
                    width:            100%;        /* Устанавливает ширину блочных или заменяемых элементов. */
                    height:           15%;         /* Устанавливает высоту блочных или заменяемых элементов. */
                    font-size:        18px;        /* Определяет размер шрифта элемента. */
                }
                    .highlighting {
                        color: #ff8b38; /* Определяет цвет текста элемента. */
                    }
                .inputFields {
                    height:          70%;          /* Устанавливает высоту блочных или заменяемых элементов. */
                    display:         flex;         /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
                    flex-direction:  column;       /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
                    justify-content: space-around; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
                    margin-left:     20px;         /* Устанавливает величину отступа от левого края элемента. */
                    margin-right:    20px;         /* Устанавливает величину отступа от правого края элемента. */
                }
                    .inputFields input {
                        border: 0px; /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
                    }
                .send .formbutton {
                    border-radius:    0 0 5px 5px; /* Устанавливает радиус скругления уголков рамки. */
                    width:            100%;        /* Устанавливает ширину блочных или заменяемых элементов. */
                    height:           15%;         /* Устанавливает высоту блочных или заменяемых элементов. */
                    color:            white;     /* Определяет цвет текста элемента. */
                    background-color: #ff9b51;   /* Определяет цвет фона элемента. */
                    border:           0px;         /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
                }

/*----------------------------------------*/
/* Стили для бренд-бара и его содержимого */
/*----------------------------------------*/
#brandBar {
    height:      80px;   /* Устанавливает высоту блочных или заменяемых элементов. */
    display:     flex;   /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    align-items: center; /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
}
    #brandBar .container {
        background-color: white; /* Определяет цвет фона элемента. */
        display:          flex;    /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
        flex-direction:   row;     /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
        height:           100%;    /* Устанавливает высоту блочных или заменяемых элементов. */
        align-items:      center;  /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
    }
        #mediaInformation {
            width:     40%;   /* Устанавливает ширину блочных или заменяемых элементов. */
            min-width: 250px; /* Устанавливает максимальную ширину элемента. */
        }
        #socailMediaIcons {
            width:           60%;          /* Устанавливает ширину блочных или заменяемых элементов. */
            height:          100%;         /* Устанавливает высоту блочных или заменяемых элементов. */
            display:         flex;         /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
            flex-direction:  row;          /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
            justify-content: space-around; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
            align-items:     center;       /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
        }
            #socailMediaIcons a i {
                color: #cccccc; /* Определяет цвет текста элемента. */
                font-size: 40px;  /* Определяет размер шрифта элемента. */
            }
/*------------------------------------------*/
/* Стили для поля Функций и его содержимого */
/*------------------------------------------*/
    #Features1, #Features2, #Features3 {
        display:         flex;       /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
        flex-direction:  row;        /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
        justify-content: flex-start; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
    }
    #Features1 {
        margin-top:    50px; /* Устанавливает величину отступа от верхнего края элемента. */
        margin-bottom: 50px; /* Устанавливает величину отступа от нижнего края элемента. */
    }
        #Features1 .panelButton {
            width:     10%;  /* Устанавливает ширину блочных или заменяемых элементов. */
            min-width: 80px; /* Устанавливает минимальную ширину элемента. */
        }
            #Features1 .panelButton form {
                display:        flex;   /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
                flex-direction: column; /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
            }
                #Features1 .panelButton .formbutton{
                    width:            80px;                /* Устанавливает ширину блочных или заменяемых элементов. */
                    height:           80px;                /* Устанавливает высоту блочных или заменяемых элементов. */
                    background-color: #333333;           /* Определяет цвет фона элемента. */
                    border:           1px solid #f5f5f5; /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
                    color:            white;             /* Определяет цвет текста элемента. */
                    font-weight:      bold;                /* Устанавливает насыщенность шрифта. */
                }
                    #Features1 .panelButton .formbutton:hover{
                        background-color: #ff9b51; /* Определяет цвет фона элемента. */
                    }
        #Features1 .panelText {
            width:           60%;          /* Устанавливает ширину блочных или заменяемых элементов. */
            min-width:       250px;        /* Устанавливает минимальную ширину элемента. */
            margin-left:     10px;         /* Устанавливает величину отступа от левого края элемента. */
            margin-right:    10px;         /* Устанавливает величину отступа от правого края элемента. */
            display:         flex;         /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
            flex-direction:  column;       /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
            justify-content: space-around; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
        }
            #Features1 .panelText p{
                color: #86878b; /* Определяет цвет текста элемента. */
            }
            #Features1 .panelText .knopka{
                background-color: #ff9b51; /* Определяет цвет фона элемента. */
            }
        #Features1 .panelImage {
            width:           30%;    /* Устанавливает ширину блочных или заменяемых элементов. */
            min-width:       250px;  /* Устанавливает минимальную ширину элемента. */
            display:         flex;   /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
            flex-direction:  column; /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
            justify-content: center; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
            align-items:     center; /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
        }
            #Features1 .panelImage img {
                height: auto; /* Устанавливает высоту блочных или заменяемых элементов. */
            }
            #Features1 .panelImage .reflection {
                transform: scale(1, -1); /* Трансформирует элемент, в частности, позволяет его масштабировать, вращать, сдвигать, наклонять, а также комбинировать виды трансформаций. */
                opacity:   0.4;          /* Определяет уровень прозрачности элемента веб-страницы.  */
            }
        #Features2 {
            background-color: white; /* Определяет цвет фона элемента. */
        }
        #Features2, #Features3 {
            margin-top: 20px;  /* Устанавливает величину отступа от верхнего края элемента. */
            height:     240px; /* Устанавливает высоту блочных или заменяемых элементов. */
        }
            #Features2 .leftPanel, #Features3 .rightPanel {
                margin:      10px;   /* Устанавливает величину отступа от каждого края элемента. */
                width:       250px;  /* Устанавливает ширину блочных или заменяемых элементов. */
                align-items: center; /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
            }
            #Features2 .rightPanel, #Features3 .leftPanel {
                width:           70%;          /* Устанавливает ширину блочных или заменяемых элементов. */
                flex-direction:  column;       /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
                justify-content: space-around; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
            }
                #Features2 .rightPanel p, #Features3 .leftPanel p{
                    text-align: justify; /* Определяет горизонтальное выравнивание текста в пределах элемента. */
                }
                #Features2 .rightPanel .Title {
                    margin-top: 10px;
                    display:        flex; /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
                    flex-direction: row;  /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
                }
                #Features2 .rightPanel .Title .upload {
                    margin-right: 10px; /* Устанавливает величину отступа от правого края элемента. */
                }
                    #Features2 .rightPanel .Title .upload i{
                        font-size: 20px;      /* Определяет размер шрифта элемента. */
                        color:     #ff8b38; /* Определяет цвет текста элемента. */
                    }
                #Features2 .leftPanel{
                    Justify-content: flex-start; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
                }

                #Features3 .rightPanel{
                    Justify-content: flex-end; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
                }

/*--------------------------------*/
/* Стили Процесов и их содержимых */
/*--------------------------------*/
#OurProcess .container, #ThoughtfulDesign, #WellCrafted, #EasyToCustomize{
    display:         flex;   /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    flex-direction:  column; /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
    justify-content: center; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
    align-items:     center; /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
    margin-top:      20px;
    background-color: white;
}
    #OurProcess .container #properties {
        display:         flex; /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
        flex-direction:  row;  /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
        justify-content: space-between;
    }
        #ThoughtfulDesign, #WellCrafted, #EasyToCustomize {
            width: 33%;
            text-align: center;
        }
            #OurProcess .container h2, #OurProcess .container span {
                margin: 10px;
                text-align: center;
            } 
            #OurProcess p, h4{
                margin: 10px;
            }
        .stroke {
            width:  60px;
            height: 60px;
        }
            .stroke i {
                font-size: 30px;      /* Определяет размер шрифта элемента. */
                color:     #ff8b38; /* Определяет цвет текста элемента. */
            }

/*---------------*/
/* Медиа запросы */
/*---------------*/
@media screen and (max-width: 480px) {
    /* показываем кнопку для переключения верхней навигации */
    .nav-toggle {
        display: block; /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
    }
/* скрываем верхнее меню, отменяем обтекание, позиционируем его, сместив на высоту шапки сайта */ 
    #menu {
        max-height: 0;         /* Устанавливает максимальную высоту элемента. */
        background: #f5f5f5; /* Универсальное свойство background позволяет установить одновременно до пяти характеристик фона. */
        float:      none;      /* Определяет, по какой стороне будет выравниваться элемент, при этом остальные элементы будут обтекать его с других сторон. */
        position:   absolute;  /* Устанавливает способ позиционирования элемента относительно окна браузера или других объектов на веб-странице. */
        overflow:   hidden;    /* Свойство overflow управляет отображением содержания блочного элемента, если оно целиком не помещается и выходит за область заданных размеров. */
        top:        50px;      /* Для позиционированного элемента определяет расстояние от верхнего края родительского элемента до верхнего края дочернего элемента. */
        right:      0;         /* Для позиционированного элемента определяет расстояние от правого края родительского элемента, не включая отступ, поле и ширину рамки, до правого края дочернего элемента. */
        left:       0;         /* Для позиционированного элемента определяет расстояние от левого края родительского элемента, не включая отступ, поле и ширину рамки, до левого края дочернего элемента. */
        z-index:    3;         /* Любые позиционированные элементы на веб-странице могут накладываться друг на друга в определенном порядке, имитируя тем самым третье измерение, перпендикулярное экрану. */
    }
        /* делаем элементы списка блочными, чтобы они располагались друг под другом */
        #menu li {
            display:         flex;                /* Многоцелевое свойство, которое определяет, как элемент должен быть показан в документе. */
            justify-content: center;              /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
            align-items:     center;              /* Выравнивает flex-элементы, в том числе и анонимные flex-элементы по поперечной оси. */
            height:          25px;                /* Устанавливает высоту блочных или заменяемых элементов. */
            text-align:      center;              /* Определяет горизонтальное выравнивание текста в пределах элемента. */
            border-bottom:   1px solid #ff9b51; /* Свойство позволяет одновременно установить толщину, стиль и цвет границы внизу элемента. */
            margin-right:    0;                   /* Устанавливает величину отступа от правого края элемента. */
        }
            #menu li a {
                color: black; /* Определяет цвет текста элемента. */
            }
    header {
        height: 530px; /* Устанавливает высоту блочных или заменяемых элементов. */
    }
        header h3 {
            font-size: 18px; /* Определяет размер шрифта элемента. */
        }
    #HeaderPanel, #brandBar .container, #Features1, #Features2, #Features3 { /* расположение всех элементов в колонну */
        flex-direction: column; /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
    }
    #HeaderPanel .leftPanel, #HeaderPanel .rightPanel, .knopka, #mediaInformation, #socailMediaIcons, #Features1 .panelText, #Features2 .rightPanel, #Features3 .leftPanel { /* растягивание элементов на всю ширину страницы */
        width: 100%; /* Устанавливает ширину блочных или заменяемых элементов. */
    }
    hr {
        border: 0; /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
    }
    #HeaderPanel {
        height: 460px; /* Устанавливает высоту блочных или заменяемых элементов. */
    }
        #HeaderPanel .leftPanel{
            margin-top:    10px; /* Устанавливает величину отступа от верхнего края элемента. */
            padding-right: 0px;  /* Устанавливает значение поля от правого края содержимого элемента. */
        }
            #HeaderPanel .leftPanel .logo{
                font-size:  30px;   /* Определяет размер шрифта элемента. */
                text-align: center; /* Определяет горизонтальное выравнивание текста в пределах элемента. */
            }
            #HeaderPanel .leftPanel hr {
                border: 0; /* Универсальное свойство border позволяет одновременно установить толщину, стиль и цвет границы вокруг элемента. */
            }
            #HeaderPanel .leftPanel .stext {
                font-size: 20px; /* Определяет размер шрифта элемента. */
            }
        #HeaderPanel .rightPanel {
            justify-content: center;  /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
        }
            #Signup {
                width:  400px; /* Устанавливает ширину блочных или заменяемых элементов. */
                height: 200px; /* Устанавливает высоту блочных или заменяемых элементов. */
            }
    #brandBar {
        height: 110px; /* Устанавливает высоту блочных или заменяемых элементов. */
    }
        #mediaInformation, #socailMediaIcons{
            margin-top: 10px; /* Устанавливает величину отступа от верхнего края элемента. */
        }
            #socailMediaIcons a i {
                font-size: 25px; /* Определяет размер шрифта элемента. */
            }
    #Features1 {
        margin-top:    10px; /* Устанавливает величину отступа от верхнего края элемента. */
        margin-bottom: 10px; /* Устанавливает величину отступа от нижнего края элемента. */
    }
        #Features1 .panelButton {
            width:     100%;  /* Устанавливает ширину блочных или заменяемых элементов. */
        }
            #Features1 .panelButton form {
                flex-direction:  row;          /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
                Justify-content: space-around; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
            }
                #Features1 .panelButton .formbutton{
                    width:  33%;  /* Устанавливает ширину блочных или заменяемых элементов. */
                    height: 50px; /* Устанавливает высоту блочных или заменяемых элементов. */
                    }
            #Features1 .panelText {
                margin-left:  0px; /* Устанавливает величину отступа от левого края элемента. */
                margin-right: 0px; /* Устанавливает величину отступа от правого края элемента. */
            }
                #Features1 .panelText p, #Features1 .panelText h4, #Features2 p, #Features2 h4, #Features3 p, #Features3 h4 {
                    margin-top:    5px; /* Устанавливает величину отступа от верхнего края элемента. */
                    margin-bottom: 5px; /* Устанавливает величину отступа от нижнего края элемента. */
                }
                    #Features1 .panelImage img {
                        height: 0; /* Устанавливает высоту блочных или заменяемых элементов. */
                    }
    #Features2, #Features3 {
        margin-top: 10px; /* Устанавливает величину отступа от верхнего края элемента. */
        height:     auto; /* Устанавливает высоту блочных или заменяемых элементов. */
    }
    #Features2 .rightPanel, #Features2 .Title {
        margin-top: 5px; /* Устанавливает величину отступа от верхнего края элемента. */
    }
    #Features2 .leftPanel, #Features3 .rightPanel{
        Justify-content: center; /* Определяет, как браузер распределяет пространство вокруг флекс-элементов вдоль главной оси контейнера. */
    }

    #OurProcess .container #properties {
        flex-direction:  column;  /* Управляет направлением главной оси, вдоль которой укладываются flex-элементы, в соответствии с текущим режимом записи. */
    }
        #ThoughtfulDesign, #WellCrafted, #EasyToCustomize {
            width: 100%;
        }
        #OurProcess .container h2, #OurProcess .container span {
            margin: 5px;
        } 
        #OurProcess p, h4{
            margin: 5px;
        }
}